<controls1:MetroWindow x:Class="RoxorBot.Modules.Main.Views.SettingsPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:viewHelpers="clr-namespace:RoxorBot.Data.ViewHelpers"
             xmlns:controls="clr-namespace:RoxorBot.Controls"
             xmlns:controls1="http://metro.mahapps.com/winfx/xaml/controls"
             Height="521" Width="690" WindowStyle="ToolWindow" ResizeMode="NoResize"
             mvvm:ViewModelLocator.AutoWireViewModel="True">
    <controls1:MetroWindow.Resources>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="LightBlue" />
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="LightBlue" />
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="LightBlue" />
        </Style>
    </controls1:MetroWindow.Resources>
    <Grid x:Name="SettingsGrid" Background="LightBlue">
        <TabControl Margin="50,50,25,22" Background="LightBlue">
            <TabItem Header="Settings">
                <Grid>
                    <ContentControl>
                        <controls:SettingsControl />
                    </ContentControl>
                </Grid>
            </TabItem>
            <TabItem Header="Filters">
                <Grid>
                    <DataGrid ItemsSource="{Binding Filters}" SelectedItem="{Binding SelectedFilter}" HorizontalAlignment="Left" CanUserAddRows="False" AutoGenerateColumns="False" Height="283" VerticalAlignment="Top" Width="553" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Word" Binding="{Binding Path=Word}" Width="240" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Ban Duration" Binding="{Binding Path=BanDuration}" Width="120" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Added by" Binding="{Binding Path=Author}" Width="100" IsReadOnly="True"/>
                            <DataGridTextColumn Header="is Regex" Binding="{Binding Path=IsRegex}" Width="*" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add" Command="{Binding AddFilterCommand}" />
                                <MenuItem Header="Edit" Command="{Binding EditFilterCommand}" />
                                <MenuItem Header="Remove" Command="{Binding FilterListDoubleClickCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <i:Interaction.Triggers>
                            <viewHelpers:EventToCommand EventName="MouseDoubleClick" Command="{Binding FilterListDoubleClickCommand}" />
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Button Content="Add" Command="{Binding AddFilterCommand}" HorizontalAlignment="Left" Margin="0,306,0,0" VerticalAlignment="Top" Width="88" Height="32" />
                </Grid>
            </TabItem>
            <TabItem Header="Whitelist">
                <Grid>
                    <DataGrid ItemsSource="{Binding Whitelist}" HorizontalAlignment="Left" CanUserAddRows="False" AutoGenerateColumns="False" Height="283" VerticalAlignment="Top" Width="553">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Word" Binding="{Binding Path=Word}" Width="553" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add" Command="{Binding AddFilterCommand}" />
                                <MenuItem Header="Edit" Command="{Binding AddFilterCommand}" />
                                <MenuItem Header="Remove" Command="{Binding FilterListDoubleClickCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <i:Interaction.Triggers>
                            <viewHelpers:EventToCommand EventName="MouseDoubleClick" Command="{Binding FilterListDoubleClickCommand}" />
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Button Content="Add" HorizontalAlignment="Left" Margin="0,306,0,0" VerticalAlignment="Top" Width="88" Height="32" Command="{Binding AddFilterCommand}" />
                </Grid>
            </TabItem>
            <TabItem Header="Messages">
                <Grid>
                    <DataGrid ItemsSource="{Binding AutomatedMessages}" SelectedItem="{Binding SelectedAutomatedMessage}" HorizontalAlignment="Left" CanUserAddRows="False" AutoGenerateColumns="False" Height="283" VerticalAlignment="Top" Width="553" SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Message" Binding="{Binding Path=Message}" Width="350" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Timer" Binding="{Binding Path=Interval}" Width="100" IsReadOnly="True"/>
                            <DataGridTemplateColumn Header="Enabled" Width="103">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add" Command="{Binding AddAutomatedMessageCommand}" />
                                <MenuItem Header="Edit" Command="{Binding EditAutomatedMessageCommand}" />
                                <MenuItem Header="Remove" Command="{Binding AutomatedMessagesDoubleClickCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <i:Interaction.Triggers>
                            <viewHelpers:EventToCommand EventName="MouseDoubleClick" Command="{Binding AutomatedMessagesDoubleClickCommand}" />
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Button Content="Add" Command="{Binding AddAutomatedMessageCommand}" HorizontalAlignment="Left" Margin="0,306,0,0" VerticalAlignment="Top" Width="88" Height="32" />
                </Grid>
            </TabItem>
            <TabItem Header="Users">
                <Grid>
                    <Button Content="Add" Command="{Binding AddUserCommand}" HorizontalAlignment="Left" Margin="0,306,0,0" VerticalAlignment="Top" Width="88" Height="32" />
                    <DataGrid ItemsSource="{Binding Users}" SelectedItem="{Binding SelectedUser}" HorizontalAlignment="Left" CanUserAddRows="False" AutoGenerateColumns="False" Height="283" VerticalAlignment="Top" Width="553">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="User" Binding="{Binding Path=VisibleName}" Width="2*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Role" Binding="{Binding Path=Role}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Points" Binding="{Binding Path=Points}" Width="*" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn Header="Follower" Binding="{Binding Path=IsFollower}" Width="*" IsReadOnly="True" />
                            <DataGridCheckBoxColumn Header="Allowed" Binding="{Binding Path=IsAllowed}" Width="*" IsReadOnly="True" />
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add" Command="{Binding AddUserCommand}" />
                                <MenuItem Header="Edit" Command="{Binding EditUserCommand}" />
                                <MenuItem Header="Remove" Command="{Binding UserDoubleClickCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <i:Interaction.Triggers>
                            <viewHelpers:EventToCommand EventName="MouseDoubleClick" Command="{Binding UserDoubleClickCommand}" />
                        </i:Interaction.Triggers>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Commands">
                <Grid>
                    <DataGrid ItemsSource="{Binding CustomCommands}" SelectedItem="{Binding SelectedCustomCommand}" HorizontalAlignment="Left" CanUserAddRows="False" AutoGenerateColumns="False" Height="283" VerticalAlignment="Top" Width="553">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Command" Binding="{Binding Path=Command}" Width="152" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Reply" Binding="{Binding Path=Reply}" Width="400" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add" Command="{Binding AddCustomCommandCommand}" />
                                <MenuItem Header="Edit" Command="{Binding EditCustomCommandCommand}" />
                                <MenuItem Header="Remove"  Command="{Binding CommandsDoubleClickCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <i:Interaction.Triggers>
                            <viewHelpers:EventToCommand EventName="MouseDoubleClick" Command="{Binding CommandsDoubleClickCommand}" />
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Button Content="Add" Command="{Binding AddCustomCommandCommand}" HorizontalAlignment="Left" Margin="0,306,0,0" VerticalAlignment="Top" Width="88" Height="32" />
                </Grid>
            </TabItem>
        </TabControl>
        <Button x:Name="CloseButton" Click="CloseButton_OnClick" Content="Close" HorizontalAlignment="Left" Height="32" Margin="443,394,0,0" VerticalAlignment="Top" Width="166" />
    </Grid>
</controls1:MetroWindow>

